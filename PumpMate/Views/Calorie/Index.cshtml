@model PumpMate.Models.CalorieViewModel

@{
    ViewData["Title"] = "Kalori Takibi";
}

<style>
    .calorie-container {
        background: var(--body-bg);
        min-height: 100vh;
        padding: 2rem 0;
    }
    
    .calorie-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow-hover);
        padding: 2rem;
        margin-bottom: 2rem;
        border: 1px solid var(--border-color);
        transition: var(--transition);
    }
    
    .calorie-card:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-hover);
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }
    
    .stat-card {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        text-align: center;
        box-shadow: var(--shadow);
        border: 1px solid var(--border-color);
        transition: var(--transition);
    }
    
    .stat-card:hover {
        transform: translateY(-3px);
        box-shadow: var(--shadow-hover);
    }
    
    .stat-number {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }
    
    .stat-label {
        font-size: 0.9rem;
        color: var(--text-color);
        font-weight: 500;
        opacity: 0.8;
    }
    
    .calories-consumed {
        color: var(--accent-color);
    }
    
    .calories-burned {
        color: var(--success-color);
    }
    
    .calorie-deficit {
        color: var(--warning-color);
    }
    
    .form-control {
        border-radius: var(--border-radius);
        border: 2px solid var(--border-color);
        padding: 1rem 1.2rem;
        transition: var(--transition);
        background: var(--card-bg);
        color: var(--text-color);
    }
    
    .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.2rem rgba(255, 107, 53, 0.25);
        background: var(--card-bg);
        color: var(--text-color);
    }
    
    .form-control::placeholder {
        color: var(--text-color);
        opacity: 0.6;
    }
    
    .btn-add {
        background: var(--gradient-primary);
        border: none;
        border-radius: var(--border-radius);
        padding: 1rem 2rem;
        font-weight: 600;
        transition: var(--transition);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .btn-add:hover {
        transform: translateY(-2px);
        box-shadow: var(--shadow-hover);
        background: var(--accent-color);
    }
    
    .btn-delete {
        background: var(--accent-color);
        border: none;
        border-radius: var(--border-radius);
        padding: 0.5rem 1rem;
        color: var(--white);
        font-size: 0.8rem;
        transition: var(--transition);
    }
    
    .btn-delete:hover {
        background: #c82333;
        transform: translateY(-1px);
        box-shadow: var(--shadow);
    }
    
    .calorie-entry {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        padding: 1rem;
        margin-bottom: 1rem;
        transition: var(--transition);
    }
    
    .calorie-entry:hover {
        transform: translateX(5px);
        box-shadow: var(--shadow);
    }
    
    .entry-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }
    
    .entry-title {
        font-weight: 600;
        color: var(--text-color);
        margin: 0;
    }
    
    .entry-calories {
        font-weight: 700;
        color: var(--primary-color);
        font-size: 1.1rem;
    }
    
    .entry-time {
        color: var(--text-color);
        opacity: 0.7;
        font-size: 0.9rem;
    }
    
    .progress-container {
        background: var(--border-color);
        border-radius: var(--border-radius);
        height: 10px;
        margin: 1rem 0;
        overflow: hidden;
    }
    
    .progress-bar {
        height: 100%;
        border-radius: var(--border-radius);
        transition: var(--transition);
    }
    
    .progress-consumed {
        background: var(--accent-color);
    }
    
    .progress-burned {
        background: var(--success-color);
    }
    
    .progress-deficit {
        background: var(--warning-color);
    }
    
    .quick-add-section {
        background: var(--card-bg);
        border-radius: var(--border-radius);
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow);
        border: 1px solid var(--border-color);
    }
    
    .quick-add-btn {
        background: var(--hover-bg);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        padding: 0.8rem 1.2rem;
        color: var(--text-color);
        text-decoration: none;
        transition: var(--transition);
        display: inline-block;
        margin: 0.5rem;
        font-size: 0.9rem;
    }
    
    .quick-add-btn:hover {
        background: var(--primary-color);
        color: var(--white);
        transform: translateY(-2px);
        text-decoration: none;
    }
    
    .empty-state {
        text-align: center;
        padding: 3rem 1rem;
        color: var(--text-color);
    }
    
    .empty-state i {
        font-size: 4rem;
        opacity: 0.5;
        margin-bottom: 1rem;
    }
    
    .workout-calories {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        padding: 1rem;
        margin-bottom: 1rem;
        transition: var(--transition);
    }
    
    .workout-calories:hover {
        transform: translateX(5px);
        box-shadow: var(--shadow);
    }
    
    .workout-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
    }
    
    .workout-type {
        font-weight: 600;
        color: var(--success-color);
        margin: 0;
    }
    
    .workout-calories-burned {
        font-weight: 700;
        color: var(--success-color);
        font-size: 1.1rem;
    }
    
    .workout-date {
        color: var(--text-color);
        opacity: 0.7;
        font-size: 0.9rem;
    }
    
    @@media (max-width: 768px) {
        .stats-grid {
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        }
        
        .entry-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }
    }
</style>

<div class="calorie-container">
    <div class="container">
        <!-- Ba≈ülƒ±k -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h2 class="mb-0">
                            üî• Kalori Takibi
                        </h2>
                        <p class="text-muted mb-0">G√ºnl√ºk kalori alƒ±mƒ±nƒ±zƒ± ve yakƒ±mƒ±nƒ±zƒ± takip edin</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- ƒ∞statistikler -->
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number calories-consumed">@Model.TotalCaloriesConsumed</div>
                <div class="stat-label">T√ºketilen Kalori</div>
            </div>
            <div class="stat-card">
                <div class="stat-number calories-burned">@Model.TotalCaloriesBurned</div>
                <div class="stat-label">Yakƒ±lan Kalori</div>
            </div>
            <div class="stat-card">
                <div class="stat-number calorie-deficit">@Model.CalorieDeficit</div>
                <div class="stat-label">Kalori A√ßƒ±ƒüƒ±</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@Model.DailyGoal</div>
                <div class="stat-label">G√ºnl√ºk Hedef</div>
            </div>
        </div>

        <!-- ƒ∞lerleme √áubuƒüu -->
        <div class="calorie-card">
            <h4 class="mb-3">
                üìä G√ºnl√ºk ƒ∞lerleme
            </h4>
            <div class="progress-container">
                <div class="progress-bar progress-consumed" style="width: @(Model.TotalCaloriesConsumed > Model.DailyGoal ? 100 : (Model.TotalCaloriesConsumed * 100 / Model.DailyGoal))%"></div>
            </div>
            <div class="d-flex justify-content-between mt-2">
                <small class="text-muted">0</small>
                <small class="text-muted">@Model.DailyGoal kalori</small>
            </div>
        </div>

        <!-- Hƒ±zlƒ± Ekleme -->
        <div class="quick-add-section">
            <h4 class="mb-3">
                ‚ö° Hƒ±zlƒ± Ekleme
            </h4>
            <div class="text-center">
                <a href="#" class="quick-add-btn" onclick="quickAdd(100, 'Su')">
                    üíß Su
                </a>
                <a href="#" class="quick-add-btn" onclick="quickAdd(50, 'Kahve')">
                    ‚òï Kahve
                </a>
                <a href="#" class="quick-add-btn" onclick="quickAdd(200, 'Meyve')">
                    üçé Meyve
                </a>
                <a href="#" class="quick-add-btn" onclick="quickAdd(300, 'Sandvi√ß')">
                    ü•™ Sandvi√ß
                </a>
                <a href="#" class="quick-add-btn" onclick="quickAdd(500, 'Ana Yemek')">
                    üçΩÔ∏è Ana Yemek
                </a>
            </div>
        </div>

        <!-- Kalori Ekleme Formu -->
        <div class="calorie-card">
            <h4 class="mb-3">
                ‚ûï Yeni Kalori Ekle
            </h4>
            <form asp-action="AddCalorieEntry" method="post">
                <div class="row">
                    <div class="col-md-5 mb-3">
                        <input name="FoodName" class="form-control" placeholder="Yiyecek/ƒ∞√ßecek adƒ±" required />
                    </div>
                    <div class="col-md-3 mb-3">
                        <input name="Calories" type="number" class="form-control" placeholder="Kalori" required />
                    </div>
                    <div class="col-md-2 mb-3">
                        <input type="text" class="form-control" value="T√ºketilen" readonly />
                    </div>
                    <div class="col-md-2 mb-3">
                        <button type="submit" class="btn btn-add text-white w-100">
                            ‚ûï Ekle
                        </button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Antrenman Kalorileri -->
        @if (Model.TotalCaloriesBurned > 0)
        {
            <div class="calorie-card">
                <h4 class="mb-3">
                    üí™ Bug√ºnk√º Antrenman Kalorileri
                </h4>
                <div class="workout-calories">
                    <div class="workout-header">
                        <h6 class="workout-type">Antrenman</h6>
                        <span class="workout-calories-burned">-@Model.TotalCaloriesBurned kcal</span>
                    </div>
                    <div class="workout-date">Bug√ºn yapƒ±lan antrenmanlardan yakƒ±lan toplam kalori</div>
                </div>
            </div>
        }

        <!-- Kalori Giri≈üleri -->
        <div class="calorie-card">
            <h4 class="mb-3">
                üìã G√ºnl√ºk Giri≈üler
            </h4>
            
            @if (!Model.CalorieEntries.Any())
            {
                <div class="empty-state">
                    <h5>Hen√ºz kalori giri≈üi yapƒ±lmamƒ±≈ü</h5>
                    <p class="text-muted">ƒ∞lk kalori giri≈üinizi yaparak takibe ba≈ülayƒ±n!</p>
                </div>
            }
            else
            {
                <div class="row">
                    <div class="col-md-12">
                        <h5 class="mb-3">
                            üçΩÔ∏è T√ºketilen
                        </h5>
                        @foreach (var entry in Model.CalorieEntries)
                        {
                            <div class="calorie-entry">
                                <div class="entry-header">
                                    <h6 class="entry-title">@entry.FoodName</h6>
                                    <span class="entry-calories">+@entry.Calories kcal</span>
                                </div>
                                <div class="entry-time">@entry.Date.ToString("HH:mm")</div>
                                <form asp-action="DeleteCalorieEntry" method="post" style="display: inline;">
                                    <input type="hidden" name="id" value="@entry.Id" />
                                    <button type="submit" class="btn btn-delete btn-sm" onclick="return confirm('Bu giri≈üi silmek istediƒüinizden emin misiniz?')">
                                        üóëÔ∏è
                                    </button>
                                </form>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
function quickAdd(calories, foodName) {
    document.querySelector('input[name="FoodName"]').value = foodName;
    document.querySelector('input[name="Calories"]').value = calories;
    document.querySelector('input[name="FoodName"]').focus();
}
</script> 